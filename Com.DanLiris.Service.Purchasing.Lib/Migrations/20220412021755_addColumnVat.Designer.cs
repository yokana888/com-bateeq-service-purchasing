// <auto-generated />
using Com.DanLiris.Service.Purchasing.Lib;
using Com.DanLiris.Service.Purchasing.Lib.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Com.DanLiris.Service.Purchasing.Lib.Migrations
{
    [DbContext(typeof(PurchasingDbContext))]
    [Migration("20220412021755_addColumnVat")]
    partial class addColumnVat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankDocumentNumber.BankDocumentNumber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("LastDocumentNumber");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Type")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("BankDocumentNumbers");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("BankExpenditureNoteId");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("Currency")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<double>("IncomeTax");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("UPODate");

                    b.Property<long>("UnitPaymentOrderId");

                    b.Property<string>("UnitPaymentOrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("Vat");

                    b.HasKey("Id");

                    b.HasIndex("BankExpenditureNoteId");

                    b.ToTable("BankExpenditureNoteDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("BankExpenditureNoteDetailId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<double>("Quantity");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<long>("UnitPaymentOrderItemId");

                    b.Property<string>("Uom")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BankExpenditureNoteDetailId");

                    b.ToTable("BankExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BGCheckNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountCOA")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<string>("BankCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("BankCurrencyId");

                    b.Property<string>("BankCurrencyRate")
                        .HasMaxLength(255);

                    b.Property<int>("BankId");

                    b.Property<string>("BankName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(255);

                    b.Property<double>("GrandTotal");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<int>("SupplierId");

                    b.Property<bool>("SupplierImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("BankExpenditureNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ArrivalDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("DeliveryOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOItemId");

                    b.Property<double>("DOQuantity");

                    b.Property<double>("DealQuantity");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPODetailId");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("DOItemId");

                    b.ToTable("DeliveryOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("DOId");

                    b.ToTable("DeliveryOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BGNo");

                    b.Property<string>("BankAccountName");

                    b.Property<string>("BankAccountNumber");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankId");

                    b.Property<string>("BankName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("Currency");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No");

                    b.Property<double>("TotalDPP");

                    b.Property<double>("TotalIncomeTax");

                    b.HasKey("Id");

                    b.ToTable("PPHBankExpenditureNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNoteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PPHBankExpenditureNoteId");

                    b.Property<int>("PurchasingDocumentExpeditionId");

                    b.Property<string>("UnitPaymentOrderNo");

                    b.HasKey("Id");

                    b.HasIndex("PPHBankExpenditureNoteId");

                    b.HasIndex("PurchasingDocumentExpeditionId");

                    b.ToTable("PPHBankExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpedition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountingDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("AccountingDivisionDate");

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset?>("BankExpenditureNoteDate");

                    b.Property<string>("BankExpenditureNoteNo")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("BankExpenditureNotePPHDate");

                    b.Property<string>("BankExpenditureNotePPHNo");

                    b.Property<string>("CashierDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("CashierDivisionDate");

                    b.Property<string>("CategoryCode");

                    b.Property<string>("CategoryName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("Currency")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<double>("IncomeTax");

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<bool>("IsPaidPPH");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedReason")
                        .HasMaxLength(255);

                    b.Property<string>("PaymentMethod");

                    b.Property<int>("Position");

                    b.Property<string>("SendToAccountingDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToAccountingDivisionDate");

                    b.Property<string>("SendToCashierDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToCashierDivisionDate");

                    b.Property<string>("SendToPurchasingDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToPurchasingDivisionDate");

                    b.Property<string>("SendToVerificationDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToVerificationDivisionDate");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<DateTimeOffset>("UPODate");

                    b.Property<string>("UnitPaymentOrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("Vat");

                    b.Property<string>("VerificationDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("VerificationDivisionDate");

                    b.Property<DateTimeOffset?>("VerifyDate");

                    b.HasKey("Id");

                    b.ToTable("PurchasingDocumentExpeditions");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpeditionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<int>("PurchasingDocumentExpeditionId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitCode");

                    b.Property<string>("UnitId");

                    b.Property<string>("UnitName");

                    b.Property<string>("Uom");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingDocumentExpeditionId");

                    b.ToTable("PurchasingDocumentExpeditionItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(255);

                    b.Property<double>("CurrencyRate")
                        .HasMaxLength(1000);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<string>("FreightCostBy");

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxRate")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsCanceled");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<string>("PaymentDueDays");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.HasKey("Id");

                    b.HasIndex("EPONo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2020-02-01 00:00:00.0000000')");

                    b.ToTable("ExternalPurchaseOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DOQuantity");

                    b.Property<double>("DealQuantity");

                    b.Property<string>("DealUomId");

                    b.Property<string>("DealUomUnit");

                    b.Property<double>("DefaultQuantity");

                    b.Property<string>("DefaultUomId");

                    b.Property<string>("DefaultUomUnit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<double>("DispositionQuantity");

                    b.Property<long>("EPOItemId");

                    b.Property<bool>("IncludePpn");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<long>("PRItemId");

                    b.Property<double>("PriceBeforeTax");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("ReceiptQuantity");

                    b.HasKey("Id");

                    b.HasIndex("EPOItemId");

                    b.ToTable("ExternalPurchaseOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POId");

                    b.Property<string>("PONo")
                        .HasMaxLength(255);

                    b.Property<long>("PRId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("EPOId");

                    b.ToTable("ExternalPurchaseOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentBeacukaiModel.GarmentBeacukai", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset?>("ArrivalDate");

                    b.Property<long>("BCIdTemp");

                    b.Property<DateTimeOffset>("BeacukaiDate");

                    b.Property<string>("BeacukaiNo");

                    b.Property<string>("BillNo");

                    b.Property<double>("Bruto");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("CustomsType");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Netto");

                    b.Property<string>("Packaging");

                    b.Property<double>("PackagingQty");

                    b.Property<string>("SupplierCode");

                    b.Property<long>("SupplierId");

                    b.Property<string>("SupplierName");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("ValidationDate");

                    b.HasKey("Id");

                    b.ToTable("GarmentBeacukais");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentBeacukaiModel.GarmentBeacukaiItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ArrivalDate");

                    b.Property<long>("BeacukaiId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GarmentDOId");

                    b.Property<string>("GarmentDONo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("TotalAmount");

                    b.Property<double>("TotalQty");

                    b.HasKey("Id");

                    b.HasIndex("BeacukaiId");

                    b.ToTable("GarmentBeacukaiItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentCorrectionNoteModel.GarmentCorrectionNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CorrectionDate");

                    b.Property<string>("CorrectionNo")
                        .HasMaxLength(255);

                    b.Property<string>("CorrectionType")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<long>("CurrencyId");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(1000);

                    b.Property<decimal>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NKPH");

                    b.Property<string>("NKPN");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<long>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<decimal>("TotalCorrection");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.HasKey("Id");

                    b.HasIndex("CorrectionNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentCorrectionNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentCorrectionNoteModel.GarmentCorrectionNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DODetailId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<long>("GCorrectionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POId");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(1000);

                    b.Property<long>("PRId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<decimal>("PricePerDealUnitAfter")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<decimal>("PricePerDealUnitBefore")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<decimal>("PriceTotalAfter");

                    b.Property<decimal>("PriceTotalBefore");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(1000);

                    b.Property<string>("UomIUnit")
                        .HasMaxLength(1000);

                    b.Property<long>("UomId");

                    b.HasKey("Id");

                    b.HasIndex("GCorrectionId");

                    b.ToTable("GarmentCorrectionNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ArrivalDate");

                    b.Property<string>("BillNo")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("CustomsId");

                    b.Property<string>("DOCurrencyCode");

                    b.Property<long?>("DOCurrencyId");

                    b.Property<double?>("DOCurrencyRate");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int?>("IncomeTaxId")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(255);

                    b.Property<double?>("IncomeTaxRate");

                    b.Property<string>("InternNo");

                    b.Property<bool>("IsClosed");

                    b.Property<bool?>("IsCorrection");

                    b.Property<bool>("IsCustoms");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsInvoice");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentBill")
                        .HasMaxLength(50);

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentType");

                    b.Property<string>("Remark");

                    b.Property<string>("ShipmentNo");

                    b.Property<string>("ShipmentType");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<long>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<double>("TotalAmount");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<bool?>("UseIncomeTax");

                    b.Property<bool?>("UseVat");

                    b.HasKey("Id");

                    b.ToTable("GarmentDeliveryOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CodeRequirment");

                    b.Property<double>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DOQuantity");

                    b.Property<double>("DealQuantity");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOItemId");

                    b.Property<long>("GarmentDOItemId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("POId")
                        .HasMaxLength(255);

                    b.Property<int>("POItemId");

                    b.Property<string>("POSerialNumber");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<double?>("PricePerDealUnitCorrection");

                    b.Property<double>("PriceTotal");

                    b.Property<double?>("PriceTotalCorrection");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double?>("QuantityCorrection");

                    b.Property<string>("RONo");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<double>("ReturQuantity");

                    b.Property<double>("SmallQuantity");

                    b.Property<string>("SmallUomId");

                    b.Property<string>("SmallUomUnit");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("GarmentDOItemId");

                    b.ToTable("GarmentDeliveryOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<long?>("CurrencyId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<long>("GarmentDOId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PaymentDueDays");

                    b.HasKey("Id");

                    b.HasIndex("GarmentDOId");

                    b.ToTable("GarmentDeliveryOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentExternalPurchaseOrderModel.GarmentExternalPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Category");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DarkPerspiration")
                        .HasMaxLength(1000);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("DryRubbing")
                        .HasMaxLength(1000);

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<string>("FreightCostBy");

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxRate")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsApproved");

                    b.Property<bool>("IsCanceled");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsIncomeTax");

                    b.Property<bool>("IsOverBudget");

                    b.Property<bool>("IsPosted");

                    b.Property<bool>("IsUseVat");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("LightMedPerspiration")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<int>("PaymentDueDays");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentType");

                    b.Property<string>("PieceLength")
                        .HasMaxLength(1000);

                    b.Property<string>("QualityStandardType")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark");

                    b.Property<string>("Shrinkage")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<int>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<bool>("SupplierImport")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("Washing")
                        .HasMaxLength(1000);

                    b.Property<string>("WetRubbing")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("EPONo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentExternalPurchaseOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentExternalPurchaseOrderModel.GarmentExternalPurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Article")
                        .HasMaxLength(1000);

                    b.Property<double>("BudgetPrice");

                    b.Property<double>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DOQuantity");

                    b.Property<double>("DealQuantity");

                    b.Property<int>("DealUomId");

                    b.Property<string>("DealUomUnit");

                    b.Property<double>("DefaultQuantity");

                    b.Property<int>("DefaultUomId");

                    b.Property<string>("DefaultUomUnit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GarmentEPOId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsOverBudget");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("OverBudgetRemark");

                    b.Property<int>("POId");

                    b.Property<string>("PONo")
                        .HasMaxLength(255);

                    b.Property<string>("PO_SerialNumber")
                        .HasMaxLength(255);

                    b.Property<int>("PRId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<double>("ReceiptQuantity");

                    b.Property<string>("Remark");

                    b.Property<double>("SmallQuantity");

                    b.Property<int>("SmallUomId");

                    b.Property<string>("SmallUomUnit");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<double>("UsedBudget");

                    b.HasKey("Id");

                    b.HasIndex("GarmentEPOId");

                    b.ToTable("GarmentExternalPurchaseOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternalPurchaseOrderModel.GarmentInternalPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Article")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerId")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset?>("ExpectedDeliveryDate");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PONo")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("PRDate");

                    b.Property<long>("PRId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<DateTimeOffset>("ShipmentDate");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("GarmentInternalPurchaseOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternalPurchaseOrderModel.GarmentInternalPurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("BudgetPrice");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GPOId");

                    b.Property<long>("GPRItemId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PO_SerialNumber")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<double>("RemainingBudget");

                    b.Property<string>("Status")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("GPOId");

                    b.ToTable("GarmentInternalPurchaseOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<long?>("CurrencyId")
                        .HasMaxLength(255);

                    b.Property<double>("CurrencyRate")
                        .HasMaxLength(1000);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("INDate");

                    b.Property<string>("INNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<long?>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("INNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentInternNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNoteDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<long>("GarmentItemINId");

                    b.Property<int>("InvoiceDetailId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("PaymentDueDate");

                    b.Property<int>("PaymentDueDays");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(255);

                    b.Property<string>("PaymentType")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<double>("PriceTotal");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long?>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<double>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<long?>("UOMId");

                    b.Property<string>("UOMUnit")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("GarmentItemINId");

                    b.ToTable("GarmentInternNoteDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GarmentINId");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<long>("InvoiceId");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("GarmentINId");

                    b.ToTable("GarmentInternNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInventoryModel.GarmentInventoryDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GarmentInventoryDocuments");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInventoryModel.GarmentInventoryDocumentItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GarmentInventoryDocumentId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int?>("MongoIndexItem");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<decimal>("Quantity");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("GarmentInventoryDocumentId");

                    b.ToTable("GarmentInventoryDocumentItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInventoryModel.GarmentInventoryMovement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<decimal>("After");

                    b.Property<decimal>("Before");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Quantity");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<decimal>("StockPlanning");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("Type")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("GarmentInventoryMovements");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInventoryModel.GarmentInventorySummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("StockPlanning");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GarmentInventorySummaries");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<long>("CurrencyId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("HasInternNote");

                    b.Property<DateTimeOffset>("IncomeTaxDate");

                    b.Property<long>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<string>("IncomeTaxNo");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPayTax");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NPH");

                    b.Property<string>("NPN");

                    b.Property<string>("SupplierCode");

                    b.Property<long>("SupplierId");

                    b.Property<string>("SupplierName");

                    b.Property<double>("TotalAmount");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<DateTimeOffset>("VatDate");

                    b.Property<string>("VatNo");

                    b.HasKey("Id");

                    b.ToTable("GarmentInvoices");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoiceDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DODetailId");

                    b.Property<double>("DOQuantity");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo");

                    b.Property<long>("IPOId");

                    b.Property<long>("InvoiceItemId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("POSerialNumber");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo");

                    b.Property<int>("PaymentDueDays");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("RONo");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceItemId");

                    b.ToTable("GarmentInvoiceDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoiceItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ArrivalDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("DeliveryOrderId");

                    b.Property<string>("DeliveryOrderNo");

                    b.Property<long>("InvoiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentType");

                    b.Property<double>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("GarmentInvoiceItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Article")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerId")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset?>("ExpectedDeliveryDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<bool>("IsUsed");

                    b.Property<bool>("IsValidated");

                    b.Property<bool>("IsValidatedMD1");

                    b.Property<bool>("IsValidatedMD2");

                    b.Property<bool>("IsValidatedPurchasing");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("PRType")
                        .HasMaxLength(255);

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<long>("SCId");

                    b.Property<string>("SCNo")
                        .HasMaxLength(255);

                    b.Property<string>("SectionName")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("ShipmentDate");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.Property<string>("ValidatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset?>("ValidatedDate");

                    b.Property<string>("ValidatedMD1By")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ValidatedMD1Date");

                    b.Property<string>("ValidatedMD2By")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ValidatedMD2Date");

                    b.Property<string>("ValidatedPurchasingBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ValidatedPurchasingDate");

                    b.HasKey("Id");

                    b.HasIndex("PRNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.HasIndex("RONo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentPurchaseRequests");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequestItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("ApprovedOpenPOMDBy")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("ApprovedOpenPOMDDate");

                    b.Property<string>("ApprovedOpenPOPurchasingBy")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("ApprovedOpenPOPurchasingDate");

                    b.Property<double>("BudgetPrice");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GarmentPRId");

                    b.Property<bool>("IsApprovedOpenPOMD");

                    b.Property<bool>("IsApprovedOpenPOPurchasing");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsOpenPO");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("OpenPOBy")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("OpenPODate");

                    b.Property<string>("PO_SerialNumber")
                        .HasMaxLength(255);

                    b.Property<double>("PriceConversion");

                    b.Property<long>("PriceUomId");

                    b.Property<string>("PriceUomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<string>("Status");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("GarmentPRId");

                    b.ToTable("GarmentPurchaseRequestItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentReceiptCorrectionModel.GarmentReceiptCorrection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CorrectionDate");

                    b.Property<string>("CorrectionNo")
                        .HasMaxLength(255);

                    b.Property<string>("CorrectionType")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(500);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("URNId");

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CorrectionNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentReceiptCorrections");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentReceiptCorrectionModel.GarmentReceiptCorrectionItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("Conversion");

                    b.Property<double>("CorrectionConversion");

                    b.Property<long>("CorrectionId");

                    b.Property<double>("CorrectionQuantity");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DODetailId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DesignColor")
                        .HasMaxLength(500);

                    b.Property<long>("EPOItemId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(500);

                    b.Property<long>("PRItemId");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(500);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<double>("SmallQuantity");

                    b.Property<long>("SmallUomId");

                    b.Property<string>("SmallUomUnit");

                    b.Property<long>("URNItemId");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.HasIndex("CorrectionId");

                    b.ToTable("GarmentReceiptCorrectionItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitDeliveryOrderModel.GarmentUnitDeliveryOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Article")
                        .HasMaxLength(1000);

                    b.Property<long>("CorrectionId");

                    b.Property<string>("CorrectionNo")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("StorageRequestCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageRequestId");

                    b.Property<string>("StorageRequestName")
                        .HasMaxLength(1000);

                    b.Property<long>("UENFromId");

                    b.Property<string>("UENFromNo")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("UnitDODate");

                    b.Property<long>("UnitDOFromId");

                    b.Property<string>("UnitDOFromNo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitDONo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitDOType")
                        .HasMaxLength(255);

                    b.Property<string>("UnitRequestCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitRequestId");

                    b.Property<string>("UnitRequestName")
                        .HasMaxLength(1000);

                    b.Property<string>("UnitSenderCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitSenderId");

                    b.Property<string>("UnitSenderName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("UnitDONo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentUnitDeliveryOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitDeliveryOrderModel.GarmentUnitDeliveryOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double?>("DOCurrencyRate");

                    b.Property<long>("DODetailId");

                    b.Property<double>("DefaultDOQuantity");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DesignColor");

                    b.Property<long>("EPOItemId");

                    b.Property<string>("FabricType")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(255);

                    b.Property<long>("PRItemId");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<double>("ReturQuantity");

                    b.Property<long?>("ReturUomId");

                    b.Property<string>("ReturUomUnit")
                        .HasMaxLength(255);

                    b.Property<long>("URNId");

                    b.Property<long>("URNItemId");

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.Property<long>("UnitDOId");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UnitDOId");

                    b.ToTable("GarmentUnitDeliveryOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitExpenditureNoteModel.GarmentUnitExpenditureNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<string>("ExpenditureTo")
                        .HasMaxLength(1000);

                    b.Property<string>("ExpenditureType")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPreparing");

                    b.Property<bool>("IsTransfered");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("StorageRequestCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageRequestId");

                    b.Property<string>("StorageRequestName")
                        .HasMaxLength(1000);

                    b.Property<string>("UENNo")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UnitDOId");

                    b.Property<string>("UnitDONo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitRequestCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitRequestId");

                    b.Property<string>("UnitRequestName")
                        .HasMaxLength(1000);

                    b.Property<string>("UnitSenderCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitSenderId");

                    b.Property<string>("UnitSenderName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("UENNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-01 00:00:00.0000000')");

                    b.ToTable("GarmentUnitExpenditureNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitExpenditureNoteModel.GarmentUnitExpenditureNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<decimal>("BasicPrice")
                        .HasColumnType("decimal(38, 4)");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<decimal>("Conversion")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double?>("DOCurrencyRate");

                    b.Property<long>("DODetailId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOItemId");

                    b.Property<string>("FabricType")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(255);

                    b.Property<long>("PRItemId");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<double>("ReturQuantity");

                    b.Property<long>("UENId");

                    b.Property<long>("URNItemId");

                    b.Property<long>("UnitDOItemId");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UENId");

                    b.ToTable("GarmentUnitExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitReceiptNoteModel.GarmentUnitReceiptNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double?>("DOCurrencyRate");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DRId");

                    b.Property<string>("DRNo");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedReason");

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsCorrection");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsStorage");

                    b.Property<bool>("IsUnitDO");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<long>("StorageId");

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<long>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<long>("UENId");

                    b.Property<string>("UENNo");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.Property<string>("URNType");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("URNNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2019-10-04 00:00:00.0000000')");

                    b.ToTable("GarmentUnitReceiptNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitReceiptNoteModel.GarmentUnitReceiptNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<decimal>("Conversion")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<decimal>("CorrectionConversion")
                        .HasColumnType("decimal(38, 20)");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DOCurrencyRate");

                    b.Property<long>("DODetailId");

                    b.Property<string>("DRItemId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DesignColor")
                        .HasMaxLength(1000);

                    b.Property<long>("EPOItemId");

                    b.Property<bool>("IsCorrection");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("OrderQuantity");

                    b.Property<long>("POId");

                    b.Property<long>("POItemId");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(1000);

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<decimal>("PricePerDealUnit")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<string>("RONo")
                        .HasMaxLength(255);

                    b.Property<decimal>("ReceiptCorrection");

                    b.Property<decimal>("ReceiptQuantity")
                        .HasColumnType("decimal(20, 4)");

                    b.Property<decimal>("SmallQuantity");

                    b.Property<long>("SmallUomId");

                    b.Property<string>("SmallUomUnit")
                        .HasMaxLength(1000);

                    b.Property<long>("UENItemId");

                    b.Property<long>("URNId");

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("URNId");

                    b.ToTable("GarmentUnitReceiptNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BudgetCode")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetId")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetName")
                        .HasMaxLength(1000);

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("ExpectedDeliveryDate");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("IsoNo")
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PONo")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("PRDate");

                    b.Property<string>("PRId")
                        .HasMaxLength(255);

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<string>("Status")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("InternalPurchaseOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderCorrection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CorrectionDate");

                    b.Property<string>("CorrectionNo")
                        .HasMaxLength(128);

                    b.Property<double>("CorrectionPriceTotal");

                    b.Property<double>("CorrectionQuantity");

                    b.Property<string>("CorrectionRemark")
                        .HasMaxLength(4000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POFulfillmentId");

                    b.Property<long>("UnitPaymentCorrectionId");

                    b.Property<long>("UnitPaymentCorrectionItemId");

                    b.HasKey("Id");

                    b.HasIndex("POFulfillmentId");

                    b.ToTable("InternalPurchaseOrderCorrections");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderFulFillment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryOrderDate");

                    b.Property<double>("DeliveryOrderDeliveredQuantity");

                    b.Property<long>("DeliveryOrderDetailId");

                    b.Property<long>("DeliveryOrderId");

                    b.Property<long>("DeliveryOrderItemId");

                    b.Property<string>("DeliveryOrderNo")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("InterNoteDate");

                    b.Property<DateTimeOffset>("InterNoteDueDate");

                    b.Property<string>("InterNoteNo")
                        .HasMaxLength(64);

                    b.Property<double>("InterNoteValue");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<DateTimeOffset>("SupplierDODate");

                    b.Property<long>("UnitPaymentOrderDetailId");

                    b.Property<long>("UnitPaymentOrderId");

                    b.Property<DateTimeOffset>("UnitPaymentOrderIncomeTaxDate");

                    b.Property<string>("UnitPaymentOrderIncomeTaxNo");

                    b.Property<double>("UnitPaymentOrderIncomeTaxRate");

                    b.Property<long>("UnitPaymentOrderItemId");

                    b.Property<bool>("UnitPaymentOrderUseIncomeTax");

                    b.Property<bool>("UnitPaymentOrderUseVat");

                    b.Property<DateTimeOffset>("UnitPaymentOrderVatDate");

                    b.Property<string>("UnitPaymentOrderVatNo");

                    b.Property<DateTimeOffset>("UnitReceiptNoteDate");

                    b.Property<double>("UnitReceiptNoteDeliveredQuantity");

                    b.Property<long>("UnitReceiptNoteId");

                    b.Property<long>("UnitReceiptNoteItemId");

                    b.Property<string>("UnitReceiptNoteNo")
                        .HasMaxLength(64);

                    b.Property<string>("UnitReceiptNoteUom")
                        .HasMaxLength(128);

                    b.Property<string>("UnitReceiptNoteUomId")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("POItemId");

                    b.ToTable("InternalPurchaseOrderFulfillments");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POId");

                    b.Property<long>("PRItemId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark")
                        .HasMaxLength(1000);

                    b.Property<double>("Quantity");

                    b.Property<string>("Status")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("POId");

                    b.ToTable("InternalPurchaseOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BudgetCode")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetId")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetName")
                        .HasMaxLength(1000);

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("ExpectedDeliveryDate");

                    b.Property<bool>("Internal");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<int>("Status");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("No")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2020-02-01 00:00:00.0000000')");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequestItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<long>("PurchaseRequestId");

                    b.Property<double>("Quantity");

                    b.Property<string>("Remark");

                    b.Property<string>("Status");

                    b.Property<string>("Uom")
                        .HasMaxLength(255);

                    b.Property<string>("UomId");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("PurchaseRequestItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDisposition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("Amount");

                    b.Property<string>("Bank");

                    b.Property<string>("Calculation");

                    b.Property<string>("CategoryCode");

                    b.Property<string>("CategoryId");

                    b.Property<string>("CategoryName");

                    b.Property<string>("ConfirmationOrderNo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("CurrencyDescription");

                    b.Property<string>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<double>("DPP");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DispositionNo");

                    b.Property<string>("DivisionCode");

                    b.Property<string>("DivisionId");

                    b.Property<string>("DivisionName");

                    b.Property<string>("IncomeTaxBy");

                    b.Property<double>("IncomeTaxValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("PaymentCorrection");

                    b.Property<DateTimeOffset>("PaymentDueDate");

                    b.Property<string>("PaymentMethod");

                    b.Property<int>("Position");

                    b.Property<string>("ProformaNo");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode");

                    b.Property<string>("SupplierId");

                    b.Property<string>("SupplierName");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<double>("VatValue");

                    b.HasKey("Id");

                    b.ToTable("PurchasingDispositions");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDispositionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DealQuantity");

                    b.Property<string>("DealUomId");

                    b.Property<string>("DealUomUnit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPODetailId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PRId");

                    b.Property<string>("PRNo");

                    b.Property<double>("PaidPrice");

                    b.Property<double>("PaidQuantity");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<double>("PriceTotal");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<long>("PurchasingDispositionItemId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode");

                    b.Property<string>("UnitId");

                    b.Property<string>("UnitName");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingDispositionItemId");

                    b.ToTable("PurchasingDispositionDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDispositionItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("PurchasingDispositionId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingDispositionId");

                    b.ToTable("PurchasingDispositionItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("CorrectionDate");

                    b.Property<string>("CorrectionType");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset?>("DueDate");

                    b.Property<DateTimeOffset?>("IncomeTaxCorrectionDate");

                    b.Property<string>("IncomeTaxCorrectionNo");

                    b.Property<DateTimeOffset?>("InvoiceCorrectionDate");

                    b.Property<string>("InvoiceCorrectionNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ReleaseOrderNoteNo");

                    b.Property<string>("Remark");

                    b.Property<string>("ReturNoteNo");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierNpwp")
                        .HasMaxLength(100);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UPCNo");

                    b.Property<long>("UPOId");

                    b.Property<string>("UPONo");

                    b.Property<DateTimeOffset?>("VatTaxCorrectionDate");

                    b.Property<string>("VatTaxCorrectionNo");

                    b.Property<bool>("useIncomeTax");

                    b.Property<bool>("useVat");

                    b.HasKey("Id");

                    b.HasIndex("UPCNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2020-02-01 00:00:00.0000000')");

                    b.ToTable("UnitPaymentCorrectionNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("CurrencyId");

                    b.Property<string>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPONo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("PRDetailId");

                    b.Property<long>("PRId");

                    b.Property<string>("PRNo");

                    b.Property<double>("PricePerDealUnitAfter");

                    b.Property<double>("PricePerDealUnitBefore");

                    b.Property<double>("PriceTotalAfter");

                    b.Property<double>("PriceTotalBefore");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<double>("Quantity");

                    b.Property<long>("UPCId");

                    b.Property<long>("UPODetailId");

                    b.Property<string>("URNNo");

                    b.Property<string>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.HasIndex("UPCId");

                    b.ToTable("UnitPaymentCorrectionNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(1000);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(255);

                    b.Property<double>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("IncomeTaxDate");

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(1000);

                    b.Property<string>("IncomeTaxNo")
                        .HasMaxLength(255);

                    b.Property<double>("IncomeTaxRate");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCorrection");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(255);

                    b.Property<string>("PibNo")
                        .HasMaxLength(255);

                    b.Property<int>("Position");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierAddress")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UPONo")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<DateTimeOffset>("VatDate");

                    b.Property<int>("VatId");

                    b.Property<string>("VatNo")
                        .HasMaxLength(255);

                    b.Property<double>("VatRate");

                    b.HasKey("Id");

                    b.HasIndex("UPONo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2020-02-01 00:00:00.0000000')");

                    b.ToTable("UnitPaymentOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPODetailId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<double>("PricePerDealUnitCorrection");

                    b.Property<double>("PriceTotal");

                    b.Property<double>("PriceTotalCorrection");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("QuantityCorrection");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<long>("UPOItemId");

                    b.Property<long>("URNItemId");

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("UPOItemId");

                    b.ToTable("UnitPaymentOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("UPOId");

                    b.Property<long>("URNId");

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UPOId");

                    b.ToTable("UnitPaymentOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<bool>("IsStorage");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<string>("StorageId")
                        .HasMaxLength(255);

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<bool>("SupplierIsImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("URNNo")
                        .IsUnique()
                        .HasFilter("[IsDeleted]=(0) AND [CreatedUtc]>CONVERT([datetime2],'2020-02-01 00:00:00.0000000')");

                    b.ToTable("UnitReceiptNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DODetailId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPODetailId");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCorrection");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<long>("URNId");

                    b.Property<string>("Uom");

                    b.Property<string>("UomId");

                    b.HasKey("Id");

                    b.HasIndex("URNId");

                    b.ToTable("UnitReceiptNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistribution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(25);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GarmentPOMasterDistributions");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistributionDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("Conversion");

                    b.Property<long>("CostCalculationId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("OverUsageReason")
                        .HasMaxLength(1000);

                    b.Property<long>("POMasterDistributionItemId");

                    b.Property<string>("POSerialNumber")
                        .HasMaxLength(25);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(25);

                    b.Property<long>("ProductId");

                    b.Property<decimal>("Quantity");

                    b.Property<decimal>("QuantityCC");

                    b.Property<string>("RONo")
                        .HasMaxLength(25);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomCCId");

                    b.Property<string>("UomCCUnit")
                        .HasMaxLength(50);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("POMasterDistributionItemId");

                    b.ToTable("GarmentPOMasterDistributionDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistributionItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DODetailId");

                    b.Property<long>("DOItemId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POMasterDistributionId");

                    b.Property<long>("SCId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("POMasterDistributionId");

                    b.ToTable("GarmentPOMasterDistributionItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteDetailModel", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteModel", "BankExpenditureNote")
                        .WithMany("Details")
                        .HasForeignKey("BankExpenditureNoteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteItemModel", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteDetailModel", "BankExpenditureNoteDetail")
                        .WithMany("Items")
                        .HasForeignKey("BankExpenditureNoteDetailId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderItem", "DeliveryOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("DOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrder", "DeliveryOrder")
                        .WithMany("Items")
                        .HasForeignKey("DOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNote", "PPHBankExpenditureNote")
                        .WithMany("Items")
                        .HasForeignKey("PPHBankExpenditureNoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpedition", "PurchasingDocumentExpedition")
                        .WithMany()
                        .HasForeignKey("PurchasingDocumentExpeditionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpeditionItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpedition", "PurchasingDocumentExpedition")
                        .WithMany("Items")
                        .HasForeignKey("PurchasingDocumentExpeditionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderItem", "ExternalPurchaseOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("EPOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrder", "ExternalPurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("EPOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentBeacukaiModel.GarmentBeacukaiItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentBeacukaiModel.GarmentBeacukai", "GarmentBeacukai")
                        .WithMany("Items")
                        .HasForeignKey("BeacukaiId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentCorrectionNoteModel.GarmentCorrectionNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentCorrectionNoteModel.GarmentCorrectionNote", "GarmentCorrectionNote")
                        .WithMany("Items")
                        .HasForeignKey("GCorrectionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrderItem", "GarmentDeliveryOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("GarmentDOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentDeliveryOrderModel.GarmentDeliveryOrder", "GarmentDeliveryOrder")
                        .WithMany("Items")
                        .HasForeignKey("GarmentDOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentExternalPurchaseOrderModel.GarmentExternalPurchaseOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentExternalPurchaseOrderModel.GarmentExternalPurchaseOrder", "GarmentExternalPurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("GarmentEPOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternalPurchaseOrderModel.GarmentInternalPurchaseOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternalPurchaseOrderModel.GarmentInternalPurchaseOrder", "GarmentInternalPurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("GPOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNoteDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNoteItem", "InternNoteItem")
                        .WithMany("Details")
                        .HasForeignKey("GarmentItemINId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInternNoteModel.GarmentInternNote", "InternNote")
                        .WithMany("Items")
                        .HasForeignKey("GarmentINId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInventoryModel.GarmentInventoryDocumentItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInventoryModel.GarmentInventoryDocument", "GarmentInventoryDocument")
                        .WithMany("Items")
                        .HasForeignKey("GarmentInventoryDocumentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoiceDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoiceItem", "GarmentInvoiceItem")
                        .WithMany("Details")
                        .HasForeignKey("InvoiceItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoiceItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentInvoiceModel.GarmentInvoice", "GarmentInvoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequestItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequest", "GarmentPurchaseRequest")
                        .WithMany("Items")
                        .HasForeignKey("GarmentPRId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentReceiptCorrectionModel.GarmentReceiptCorrectionItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentReceiptCorrectionModel.GarmentReceiptCorrection", "GarmentReceiptCorrection")
                        .WithMany("Items")
                        .HasForeignKey("CorrectionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitDeliveryOrderModel.GarmentUnitDeliveryOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitDeliveryOrderModel.GarmentUnitDeliveryOrder", "GarmentUnitDeliveryOrder")
                        .WithMany("Items")
                        .HasForeignKey("UnitDOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitExpenditureNoteModel.GarmentUnitExpenditureNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitExpenditureNoteModel.GarmentUnitExpenditureNote", "GarmentUnitExpenditureNote")
                        .WithMany("Items")
                        .HasForeignKey("UENId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitReceiptNoteModel.GarmentUnitReceiptNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentUnitReceiptNoteModel.GarmentUnitReceiptNote", "GarmentUnitReceiptNote")
                        .WithMany("Items")
                        .HasForeignKey("URNId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderCorrection", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderFulFillment", "InternalPurchaseOrderFulFillment")
                        .WithMany("Corrections")
                        .HasForeignKey("POFulfillmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderFulFillment", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderItem", "InternalPurchaseOrderItem")
                        .WithMany("Fulfillments")
                        .HasForeignKey("POItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrder", "InternalPurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequestItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequest", "PurchaseRequest")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDispositionDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDispositionItem", "PurchasingDispositionItem")
                        .WithMany("Details")
                        .HasForeignKey("PurchasingDispositionItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDispositionItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.PurchasingDispositionModel.PurchasingDisposition", "PurchasingDisposition")
                        .WithMany("Items")
                        .HasForeignKey("PurchasingDispositionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNote", "UnitPaymentCorrectionNote")
                        .WithMany("Items")
                        .HasForeignKey("UPCId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderItem", "UnitPaymentOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("UPOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrder", "UnitPaymentOrder")
                        .WithMany("Items")
                        .HasForeignKey("UPOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNote", "UnitReceiptNote")
                        .WithMany("Items")
                        .HasForeignKey("URNId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistributionDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistributionItem", "GarmentPOMasterDistributionItem")
                        .WithMany("Details")
                        .HasForeignKey("POMasterDistributionItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistributionItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.ViewModels.GarmentPOMasterDistributionModels.GarmentPOMasterDistribution", "GarmentPOMasterDistribution")
                        .WithMany("Items")
                        .HasForeignKey("POMasterDistributionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
